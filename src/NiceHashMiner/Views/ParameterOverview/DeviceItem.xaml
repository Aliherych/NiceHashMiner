<UserControl x:Class="NiceHashMiner.Views.ParameterOverview.DeviceItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NiceHashMiner.Views.ParameterOverview"
             xmlns:viewModels="clr-namespace:NHMCore.Configs.ELPDataModels;assembly=NHMCore"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=viewModels:DeviceELPData}">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="StatusColumnTitle" BasedOn="{StaticResource BaseUbuntuTextBlock}">
            <Setter  Property="FontSize" Value="10"/>
            <Setter Property= "Foreground" Value="{StaticResource Gray1ColorBrush}"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="local.TextBoxCol">
            <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Regular}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontStretch" Value="Normal" />
            <Setter Property="FontStyle" Value="Normal" />
            <Setter Property="LineHeight" Value="1.5" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="local.TextBoxColDev" BasedOn="{StaticResource local.TextBoxCol}">
            <Setter Property="Foreground" Value="{DynamicResource Gray1ColorBrush}" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="local.TextBoxColStatus" BasedOn="{StaticResource local.TextBoxCol}">
            <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Bold}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="TextBoxToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="90" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                    <Setter Property="LineHeight" Value="1.57" />
                    <Setter Property="TextAlignment" Value="Center" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="AlgorithmHeaderTextBoxButton" TargetType="Button" BasedOn="{StaticResource ButtonTextBlock}">
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontFamily" Value="{StaticResource UbuntuFontFamily}"/>
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="MaxWidth" Value="100" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

    </UserControl.Resources>
    <Grid Background="Transparent" x:Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" MinWidth="320" MinHeight="56" Margin="40,0,40,0">
            <Border BorderThickness="1" CornerRadius="4" Background="{DynamicResource BackgroundColor}">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource Brushes.Gradient}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <ToggleButton Style="{StaticResource InvisibleToggleButton}" x:Name="DeviceEntry"  HorizontalContentAlignment="Stretch">
                <Grid Background="Transparent" HorizontalAlignment="Stretch" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <WrapPanel Grid.Column="0" HorizontalAlignment="Left"  VerticalAlignment="Center" Orientation="Horizontal" >
                        <TextBlock MinWidth="150" MaxWidth="200" MaxHeight="40" Style="{DynamicResource local.TextBoxCol}" Text="{Binding DeviceName}" TextWrapping="WrapWithOverflow" Margin="9,0,0,0"/>
                    </WrapPanel>
                    <Grid Grid.Column="1" HorizontalAlignment="Left">
                        <ItemsControl Grid.Row="0" x:Name="DeviceItemControl" ItemsSource="{Binding ELPs}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel x:Name="InputBoxList" Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:DeviceELPItem DataContext="{Binding .}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Grid>
            </ToggleButton>
        </Grid>
    </Grid>
</UserControl>
