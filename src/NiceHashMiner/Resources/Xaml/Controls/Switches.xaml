<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Brushes.xaml" />
        <ResourceDictionary Source="../Icons/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type CheckBox}" x:Key="NHMSwitch">
        <Style.Resources>
            <Color x:Key="DisabledBarColor">#cecdcd</Color>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid >
                            <Border x:Name="barInvisible" Width="32" Height="16" Background="Transparent" BorderBrush="Transparent"/>
                            <Border x:Name="bar" Width="27.2" Height="11.2" Background="{StaticResource PrimaryColorBrush}" Opacity="0.5" CornerRadius="5" ></Border>
                            <Border x:Name="button" Height="16" Width="16" CornerRadius="12.5" HorizontalAlignment="Left" Background="#FFFFFF" >
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="right">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="0,0,0,0" To="16,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ColorAnimation
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    Storyboard.TargetName="button"
                                    Duration="0:0:0.4"
                                    To="{StaticResource PrimaryColor}" />
                            <DoubleAnimation 
                                    Storyboard.TargetProperty="(Border.Opacity)"
                                    Storyboard.TargetName="bar"
                                    From="0.8" To="0.5" Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="left">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="16,0,0,0" To="0,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ColorAnimation
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    Storyboard.TargetName="button"
                                    Duration="0:0:0.4"
                                    To="White" />
                            <ColorAnimation
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    Storyboard.TargetName="bar"
                                    Duration="0:0:0.4"
                                    To="{StaticResource DisabledBarColor}" />
                            <DoubleAnimation 
                                    Storyboard.TargetProperty="(Border.Opacity)"
                                    Storyboard.TargetName="bar"
                                    From="0.5" To="0.8" Duration="0:0:0.2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <!--<MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                            </MultiTrigger.ExitActions>-->
                            <MultiTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="button" Property="Background" Value="White" />
                                <Setter TargetName="button" Property="Margin" Value="0,0,16,0" />
                                <Setter TargetName="bar" Property="Background" Value="{StaticResource Gray2ColorBrush}" />
                                <Setter TargetName="bar" Property="Opacity" Value="0.8" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <!--<MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                            </MultiTrigger.ExitActions>-->
                            <MultiTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="button" Property="Background" Value="{StaticResource PrimaryColorBrush}" />
                                <Setter TargetName="button" Property="Margin" Value="16,0,0,0" />
                                <Setter TargetName="bar" Property="Background" Value="{StaticResource PrimaryColorBrush}" />
                                <Setter TargetName="bar" Property="Opacity" Value="0.5" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!--#region TODO Not working as desired-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="button" Property="Background" Value="{StaticResource PrimaryColorBrush}" />
                                <Setter TargetName="bar" Property="Background" Value="{StaticResource PrimaryColorBrush}" />
                                <Setter TargetName="button" Property="Margin" Value="16,0,0,0" />
                                <Setter TargetName="bar" Property="Opacity" Value="0.2" />
                                <Setter TargetName="button" Property="Opacity" Value="0.5" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="button" Property="Background" Value="#eeeeee" />
                                <Setter TargetName="bar" Property="Background" Value="#eeeeee" />
                                <Setter TargetName="button" Property="Margin" Value="0,0,0,0" />
                                <Setter TargetName="bar" Property="Opacity" Value="0.2" />
                                <Setter TargetName="button" Property="Opacity" Value="0.5" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <!--#endregion TODO Not working as desired-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="NHMSwitchTheme">
        <Style.Resources>
            <DrawingBrush x:Key="sunButton" Drawing="{StaticResource SunCircleLight}" />
            <DrawingBrush x:Key="moonButton" Drawing="{StaticResource MoonCircleDark}" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <Border x:Name="barInvisible" Width="32" Height="16" Background="Transparent" BorderBrush="Transparent"/>
                            <Border x:Name="bar" Width="27.2" Height="11.2" Background="#fba342" Opacity="0.5" CornerRadius="5" ></Border>
                            <Border x:Name="button" Height="17" Width="17" CornerRadius="12.5" HorizontalAlignment="Left" Background="{StaticResource sunButton}">
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="right">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="0,0,0,0" To="16,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation 
                                    Storyboard.TargetProperty="(Border.Opacity)"
                                    Storyboard.TargetName="bar"
                                    From="0.8" To="0.5" Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="left">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="16,0,0,0" To="0,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation 
                                    Storyboard.TargetProperty="(Border.Opacity)"
                                    Storyboard.TargetName="bar"
                                    From="0.5" To="0.8" Duration="0:0:0.2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="button" Property="Background" Value="{DynamicResource sunButton}" />
                            <Setter TargetName="button" Property="Margin" Value="0,0,16,0" />
                            <Setter TargetName="bar" Property="Background" Value="#fba342" />
                            <Setter TargetName="bar" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="button" Property="Background" Value="{DynamicResource moonButton}" />
                            <Setter TargetName="button" Property="Margin" Value="0,0,16,0" />
                            <Setter TargetName="bar" Property="Background" Value="#5856d6" />
                            <Setter TargetName="bar" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="NHMCheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
                Width="13" 
                Height="13" 
                CornerRadius="0" 
                Background="{DynamicResource BackgroundColor}"
                BorderThickness="1"
                BorderBrush="{DynamicResource BorderColor}">
                                <Path 
                  Width="9" Height="9" 
                  x:Name="CheckMark"
                  HorizontalAlignment="Center"
                  SnapsToDevicePixels="False" 
                  Stroke="{StaticResource Brushes.FontColor.White}"
                  StrokeThickness="2"
                  Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Brushes.Gradient}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brushes.Gradient}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryColorBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Brushes.Gradient}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brushes.Gradient}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
